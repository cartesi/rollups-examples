{
  "address": "0xB61F7B17f4F252715e3eE9B80830AfFC8c455CdF",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_inputContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_outputContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_ERC20",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "ERC20Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_ERC20",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "_receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "ERC20Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ERC20",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "erc20Deposit",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "executeRollupsVoucher",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb93f1529f88dbbc24167cef59aeee93921f93a2f367dad0888cf91df766d78ef",
  "receipt": {
    "to": null,
    "from": "0x18930e8a66a1DbE21D00581216789AAB7460Afd0",
    "contractAddress": "0xB61F7B17f4F252715e3eE9B80830AfFC8c455CdF",
    "transactionIndex": 12,
    "gasUsed": "399950",
    "logsBloom": "0x
    "blockHash": "0xbb799738b74b3e87df5c943a03f367d2626f0752609c2e5574dd8e24a44d57da",
    "transactionHash": "0xb93f1529f88dbbc24167cef59aeee93921f93a2f367dad0888cf91df766d78ef",
    "logs": [
      {
        "transactionIndex": 12,
        "blockNumber": 24473146,
        "transactionHash": "0xb93f1529f88dbbc24167cef59aeee93921f93a2f367dad0888cf91df766d78ef",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000018930e8a66a1dbe21d00581216789aab7460afd0",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000002d7813b242b4200000000000000000000000000000000000000000000000019ba9dd50a7d0e3f0000000000000000000000000000000000000000000005f6dc187731d7cd5ec000000000000000000000000000000000000000000000000019b7c653cf58e2fd0000000000000000000000000000000000000000000005f6dc1b4eb312f18a02",
        "logIndex": 30,
        "blockHash": "0xbb799738b74b3e87df5c943a03f367d2626f0752609c2e5574dd8e24a44d57da"
      }
    ],
    "blockNumber": 24473146,
    "cumulativeGasUsed": "2419353",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xE5f6B7f127F4Aa0992219957A32ae986f97ac954",
    "0x2C20337B8ce8Bd8E3bcbE9356870eAdD27175373"
  ],
  "numDeployments": 1,
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_inputContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_outputContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_ERC20\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"ERC20Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_ERC20\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ERC20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"erc20Deposit\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"executeRollupsVoucher\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"erc20Deposit(address,uint256,bytes)\":{\"params\":{\"_ERC20\":\"address of the ERC20 token contract\",\"_amount\":\"amount of the ERC20 token to be deposited\",\"_data\":\"information to be interpreted by L2\"},\"returns\":{\"_0\":\"hash of input generated by deposit\"}},\"executeRollupsVoucher(bytes)\":{\"details\":\"can only be called by the Output contract\",\"params\":{\"_data\":\"data with information necessary to execute voucher\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"erc20Deposit(address,uint256,bytes)\":{\"notice\":\"deposit an amount of a generic ERC20 in the portal contract and create tokens in L2\"},\"executeRollupsVoucher(bytes)\":{\"notice\":\"execute a rollups voucher\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20PortalImpl.sol\":\"ERC20PortalImpl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"contracts/ERC20Portal.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Generic ERC20 Portal\\npragma solidity >=0.7.0;\\n\\ninterface ERC20Portal {\\n    /// @notice deposit an amount of a generic ERC20 in the portal contract and create tokens in L2\\n    /// @param _ERC20 address of the ERC20 token contract\\n    /// @param _amount amount of the ERC20 token to be deposited\\n    /// @param _data information to be interpreted by L2\\n    /// @return hash of input generated by deposit\\n    function erc20Deposit(\\n        address _ERC20,\\n        uint256 _amount,\\n        bytes calldata _data\\n    ) external returns (bytes32);\\n\\n    /// @notice execute a rollups voucher\\n    /// @param _data data with information necessary to execute voucher\\n    /// @dev can only be called by the Output contract\\n    function executeRollupsVoucher(bytes calldata _data)\\n        external\\n        returns (bool);\\n\\n    // @notice emitted on ERC20 deposited\\n    event ERC20Deposited(\\n        address _ERC20,\\n        address _sender,\\n        uint256 _amount,\\n        bytes _data\\n    );\\n\\n    // @notice emitted on ERC20 withdrawal\\n    event ERC20Withdrawn(\\n        address _ERC20,\\n        address payable _receiver,\\n        uint256 _amount\\n    );\\n}\\n\",\"keccak256\":\"0x85e430776d98bafff97a8c58dddce18f329247251f5706c792fdcba0db2cf009\",\"license\":\"Apache-2.0\"},\"contracts/ERC20PortalImpl.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Generic ERC20 Portal Implementation\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"./ERC20Portal.sol\\\";\\nimport \\\"./Input.sol\\\";\\n\\ncontract ERC20PortalImpl is ERC20Portal {\\n    address immutable outputContract;\\n    Input immutable inputContract;\\n\\n    modifier onlyOutputContract {\\n        require(msg.sender == outputContract, \\\"only outputContract\\\");\\n        _;\\n    }\\n\\n    constructor(address _inputContract, address _outputContract) {\\n        inputContract = Input(_inputContract);\\n        outputContract = _outputContract;\\n    }\\n\\n    /// @notice deposit an amount of a generic ERC20 in the portal contract and create tokens in L2\\n    /// @param _ERC20 address of the ERC20 token contract\\n    /// @param _amount amount of the ERC20 token to be deposited\\n    /// @param _data information to be interpreted by L2\\n    /// @return hash of input generated by deposit\\n    function erc20Deposit(\\n        address _ERC20,\\n        uint256 _amount,\\n        bytes calldata _data\\n    ) public override returns (bytes32) {\\n        IERC20 token = IERC20(_ERC20);\\n\\n        require(\\n            token.transferFrom(msg.sender, address(this), _amount),\\n            \\\"ERC20 transferFrom failed\\\"\\n        );\\n\\n        bytes memory input =\\n            abi.encode(\\n                msg.sender,\\n                _ERC20,\\n                _amount,\\n                _data\\n            );\\n\\n        emit ERC20Deposited(_ERC20, msg.sender, _amount, _data);\\n        return inputContract.addInput(input);\\n    }\\n\\n    /// @notice execute a rollups voucher\\n    /// @param _data data with information necessary to execute voucher\\n    /// @dev can only be called by the Output contract\\n    function executeRollupsVoucher(bytes calldata _data)\\n        public\\n        override\\n        onlyOutputContract\\n        returns (bool)\\n    {\\n        (\\n            address tokenAddr,\\n            address payable receiver,\\n            uint256 value\\n        ) = abi.decode(_data, (address, address, uint256));\\n\\n        IERC20 token = IERC20(tokenAddr);\\n\\n        // transfer reverts on failure\\n        token.transfer(receiver, value);\\n\\n        emit ERC20Withdrawn(tokenAddr, receiver, value);\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0xe1d1cc22e7123850a320b8cebe5d0e5ff114137b46e722843a4dd9b4ff433dab\",\"license\":\"Apache-2.0\"},\"contracts/Input.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Input\\npragma solidity >=0.7.0;\\n\\ninterface Input {\\n    /// @notice adds input to correct inbox\\n    /// @param _input bytes array of input\\n    /// @return merkle root hash of input\\n    /// @dev  msg.sender and timestamp are preppended log2 size\\n    ///       has to be calculated offchain taking that into account\\n    function addInput(bytes calldata _input) external returns (bytes32);\\n\\n    /// @notice returns input from correct input inbox\\n    /// @param _index position of the input on inbox\\n    /// @return root hash of input\\n    function getInput(uint256 _index) external view returns (bytes32);\\n\\n    /// @notice returns number of inputs on correct inbox\\n    /// @return number of inputs of non active inbox\\n    function getNumberOfInputs() external view returns (uint256);\\n\\n    /// @notice returns active current inbox index\\n    /// @return index of current active inbox\\n    function getCurrentInbox() external view returns (uint256);\\n\\n    /// @notice called whenever there is a new input accumulation epoch\\n    /// @dev has to be  called even if new input accumulation happens\\n    ///      implicitly due to a new epoch\\n    function onNewInputAccumulation() external;\\n\\n    /// @notice called when a new epoch begins, clears correct input box\\n    function onNewEpoch() external;\\n\\n    /// @notice input added\\n    /// @param _epochNumber which epoch this input belongs to\\n    /// @param _sender msg.sender\\n    /// @param _timestamp block.timestamp\\n    /// @param _input input data\\n    event InputAdded(\\n        uint256 indexed _epochNumber,\\n        address _sender,\\n        uint256 _timestamp,\\n        bytes _input\\n    );\\n}\\n\",\"keccak256\":\"0xaa2f6057c9df99d71a6af9cbd4fbcd716afdb72eb6f5799573f238dbaee69154\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b506040516106f33803806106f383398101604081905261002f91610062565b6001600160a01b0391821660a05216608052610095565b80516001600160a01b038116811461005d57600080fd5b919050565b6000806040838503121561007557600080fd5b61007e83610046565b915061008c60208401610046565b90509250929050565b60805160a05161063a6100b96000396000610347015260006091015261063a6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635a78177d1461003b578063cb1061a614610063575b600080fd5b61004e610049366004610422565b610084565b60405190151581526020015b60405180910390f35b61007661007136600461047c565b6101ee565b60405190815260200161005a565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146100f95760405162461bcd60e51b81526020600482015260136024820152721bdb9b1e481bdd5d1c1d5d10dbdb9d1c9858dd606a1b60448201526064015b60405180910390fd5b60008080610109858701876104d8565b60405163a9059cbb60e01b81526001600160a01b038084166004830152602482018390529396509194509250849182169063a9059cbb90604401602060405180830381600087803b15801561015d57600080fd5b505af1158015610171573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101959190610519565b50604080516001600160a01b038087168252851660208201529081018390527fbfed55bdcd242e3dd0f60ddd7d1e87c67f61c34cd9527b3e6455d841b10253629060600160405180910390a15060019695505050505050565b6040516323b872dd60e01b81523360048201523060248201526044810184905260009085906001600160a01b038216906323b872dd90606401602060405180830381600087803b15801561024157600080fd5b505af1158015610255573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102799190610519565b6102c55760405162461bcd60e51b815260206004820152601960248201527f4552433230207472616e7366657246726f6d206661696c65640000000000000060448201526064016100f0565b600033878787876040516020016102e0959493929190610542565b60405160208183030381529060405290507f29e6a9ed1b00933e0de5679ea9bc6ad323969a70b69b627425b46ac0431c7b018733888888604051610328959493929190610542565b60405180910390a1604051631e640f1d60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063f32078e89061037c908490600401610596565b602060405180830381600087803b15801561039657600080fd5b505af11580156103aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ce91906105eb565b979650505050505050565b60008083601f8401126103eb57600080fd5b50813567ffffffffffffffff81111561040357600080fd5b60208301915083602082850101111561041b57600080fd5b9250929050565b6000806020838503121561043557600080fd5b823567ffffffffffffffff81111561044c57600080fd5b610458858286016103d9565b90969095509350505050565b6001600160a01b038116811461047957600080fd5b50565b6000806000806060858703121561049257600080fd5b843561049d81610464565b935060208501359250604085013567ffffffffffffffff8111156104c057600080fd5b6104cc878288016103d9565b95989497509550505050565b6000806000606084860312156104ed57600080fd5b83356104f881610464565b9250602084013561050881610464565b929592945050506040919091013590565b60006020828403121561052b57600080fd5b8151801515811461053b57600080fd5b9392505050565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b600060208083528351808285015260005b818110156105c3578581018301518582016040015282016105a7565b818111156105d5576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156105fd57600080fd5b505191905056fea2646970667358221220459498a416336889808b271af286081dcc1f00c1162671886c763bfdc8f1709e64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80635a78177d1461003b578063cb1061a614610063575b600080fd5b61004e610049366004610422565b610084565b60405190151581526020015b60405180910390f35b61007661007136600461047c565b6101ee565b60405190815260200161005a565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146100f95760405162461bcd60e51b81526020600482015260136024820152721bdb9b1e481bdd5d1c1d5d10dbdb9d1c9858dd606a1b60448201526064015b60405180910390fd5b60008080610109858701876104d8565b60405163a9059cbb60e01b81526001600160a01b038084166004830152602482018390529396509194509250849182169063a9059cbb90604401602060405180830381600087803b15801561015d57600080fd5b505af1158015610171573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101959190610519565b50604080516001600160a01b038087168252851660208201529081018390527fbfed55bdcd242e3dd0f60ddd7d1e87c67f61c34cd9527b3e6455d841b10253629060600160405180910390a15060019695505050505050565b6040516323b872dd60e01b81523360048201523060248201526044810184905260009085906001600160a01b038216906323b872dd90606401602060405180830381600087803b15801561024157600080fd5b505af1158015610255573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102799190610519565b6102c55760405162461bcd60e51b815260206004820152601960248201527f4552433230207472616e7366657246726f6d206661696c65640000000000000060448201526064016100f0565b600033878787876040516020016102e0959493929190610542565b60405160208183030381529060405290507f29e6a9ed1b00933e0de5679ea9bc6ad323969a70b69b627425b46ac0431c7b018733888888604051610328959493929190610542565b60405180910390a1604051631e640f1d60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063f32078e89061037c908490600401610596565b602060405180830381600087803b15801561039657600080fd5b505af11580156103aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ce91906105eb565b979650505050505050565b60008083601f8401126103eb57600080fd5b50813567ffffffffffffffff81111561040357600080fd5b60208301915083602082850101111561041b57600080fd5b9250929050565b6000806020838503121561043557600080fd5b823567ffffffffffffffff81111561044c57600080fd5b610458858286016103d9565b90969095509350505050565b6001600160a01b038116811461047957600080fd5b50565b6000806000806060858703121561049257600080fd5b843561049d81610464565b935060208501359250604085013567ffffffffffffffff8111156104c057600080fd5b6104cc878288016103d9565b95989497509550505050565b6000806000606084860312156104ed57600080fd5b83356104f881610464565b9250602084013561050881610464565b929592945050506040919091013590565b60006020828403121561052b57600080fd5b8151801515811461053b57600080fd5b9392505050565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b600060208083528351808285015260005b818110156105c3578581018301518582016040015282016105a7565b818111156105d5576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156105fd57600080fd5b505191905056fea2646970667358221220459498a416336889808b271af286081dcc1f00c1162671886c763bfdc8f1709e64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "erc20Deposit(address,uint256,bytes)": {
        "params": {
          "_ERC20": "address of the ERC20 token contract",
          "_amount": "amount of the ERC20 token to be deposited",
          "_data": "information to be interpreted by L2"
        },
        "returns": {
          "_0": "hash of input generated by deposit"
        }
      },
      "executeRollupsVoucher(bytes)": {
        "details": "can only be called by the Output contract",
        "params": {
          "_data": "data with information necessary to execute voucher"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "erc20Deposit(address,uint256,bytes)": {
        "notice": "deposit an amount of a generic ERC20 in the portal contract and create tokens in L2"
      },
      "executeRollupsVoucher(bytes)": {
        "notice": "execute a rollups voucher"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}