version: "3.9"

services:
  rollups_dispatcher:
    image: cartesi/rollups-dispatcher:0.4.0
    command:
      [
        "--dapp-contract-address-file",
        "/deployments/${NETWORK:?undefined NETWORK}/${DAPP_NAME:?undefined DAPP_NAME}.address",
        "--logic-config-path",
        "/opt/cartesi/share/config/logic-config.toml",
        "--sf-config",
        "/opt/cartesi/share/config/sf-config.toml",
        "--bs-config",
        "/opt/cartesi/share/config/bs-config.toml",
        "--tm-config",
        "/opt/cartesi/share/config/tm-config.toml",
        "--mnemonic",
        "${MNEMONIC:?undefined MNEMONIC}",
        "--provider-http-endpoint",
        "${RPC_URL:?undefined RPC_URL}",
        "--ws-endpoint",
        "${WSS_URL:?undefined WSS_URL}",
        "--chain-id",
        "${CHAIN_ID:?undefined CHAIN_ID}",
      ]
    restart: always
    depends_on:
      state_server:
        condition: service_started
      server_manager:
        condition: service_started
    environment:
      RUST_LOG: info
    volumes:
      - blockchain-data:/opt/cartesi/share/blockchain:ro
      - ./config:/opt/cartesi/share/config/
      - ./deployments:/deployments

  state_server:
    image: cartesi/delegate-server:0.4.0
    command:
      [
        "--sf-config",
        "/opt/cartesi/share/config/sf-config.toml",
        "--url",
        "${RPC_URL:?undefined RPC_URL}",
        "--ws-url",
        "${WSS_URL:?undefined WSS_URL}",
        "rollups",
      ]
    restart: always
    #    healthcheck:
    #      test: ["CMD", "curl", "-f", "http://locahost:50051"]
    #      interval: 10s
    #      timeout: 5s
    #      retries: 5
    volumes:
      - blockchain-data:/opt/cartesi/share/blockchain:ro
      - ./config:/opt/cartesi/share/config/

  server_manager:
    restart: always
    #    healthcheck:
    #      test: ["CMD", "curl", "-f", "http://locahost:5001"]
    #      interval: 10s
    #      timeout: 5s
    #      retries: 5
    volumes:
      - machine:/opt/cartesi/share/dapp-bin

  rollups_indexer:
    image: cartesi/rollups-indexer:0.4.0
    command:
      [
        "--dapp-contract-address-file",
        "/deployments/${NETWORK:?undefined NETWORK}/${DAPP_NAME:?undefined DAPP_NAME}.address",
        "--indexer-config-path",
        "/opt/cartesi/share/config/indexer-config.toml",
      ]
    restart: always
    depends_on:
      state_server:
        condition: service_started
      server_manager:
        condition: service_started
      database:
        condition: service_healthy
    environment:
      RUST_LOG: info
    volumes:
      - blockchain-data:/opt/cartesi/share/blockchain
      - ./config:/opt/cartesi/share/config/
      - ./deployments:/deployments

  query_server:
    image: cartesi/query-server:0.4.0
    ports:
      - "4000:4000"
    depends_on:
      database:
        condition: service_healthy
    environment:
      - DB_USER=postgres
      - DB_NAME=postgres
      - DB_PASSWORD=password
      - DB_HOST=database
      - DB_PORT=5432
      - DB_TEST_NAME=postgres

  database:
    image: postgres:13-alpine
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - database-data:/var/lib/postgresql/data

volumes:
  blockchain-data: {}
  machine: {}
  database-data: {}
